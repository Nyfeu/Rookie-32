/**
 * @file BitMaps.hpp
 * @brief Contém as definições dos bitmaps utilizados para expressões faciais.
 */

#ifndef BITMAPS_H
#define BITMAPS_H

#include "Aplic.hpp"

/**
 * @brief Bitmap de rosto feliz com olhos totalmente abertos.
 * @note Tamanho: 32x16 pixels.
 */
static const uint8_t PROGMEM happy_open[] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
};

/**
 * @brief Bitmap de rosto feliz com olhos semiabertos.
 * @note Tamanho: 32x16 pixels.
 */
static const uint8_t PROGMEM happy_half[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

/**
 * @brief Bitmap de expressão calma (metade direita).
 * @details Pode ser combinado com calm_half_left para formar um rosto completo.
 * @note Tamanho: 32x16 pixels (cada lado com 16x16).
 */
static const uint8_t PROGMEM calm_half_right[] = {
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0x00, 0xff, 0xff, 0xff, 
    0x00, 0xff, 0xff, 0xff
};

/**
 * @brief Bitmap de expressão calma (metade esquerda).
 * @details Pode ser combinado com calm_half_right para formar um rosto completo.
 * @note Tamanho: 32x16 pixels (cada lado com 16x16).
 */
static const uint8_t PROGMEM calm_half_left[] = {
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x00, 
    0xff, 0xff, 0xff, 0x00
};

/**
 * @brief Bitmap de olho redondo (lado direito).
 * @details Usado para representar um olho em estado neutro ou de surpresa.
 * @note Tamanho: 16x16 pixels.
 */
static const uint8_t PROGMEM round_eye_right[] = {
    0x00, 0x00, 0x00, 0x00,
    0x07, 0xFF, 0xFF, 0xE0,
    0x1E, 0x00, 0x00, 0x78,
    0x38, 0x00, 0x00, 0x1C,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x38, 0x00, 0x00, 0x1C,
    0x1E, 0x00, 0x00, 0x78,
    0x07, 0xFF, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00
  };

  /**
   * @brief Bitmap de olho redondo (lado esquerdo).
   * @details Usado para representar um olho em estado neutro ou de surpresa.
   * @note Tamanho: 16x16 pixels.
   */
  static const uint8_t PROGMEM round_eye_left[] = {
    0x00, 0x00, 0x00, 0x00,
    0x07, 0xFF, 0xFF, 0xE0,
    0x1E, 0x00, 0x00, 0x78,
    0x38, 0x00, 0x00, 0x1C,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x70, 0x00, 0x00, 0x0E,
    0x38, 0x00, 0x00, 0x1C,
    0x1E, 0x00, 0x00, 0x78,
    0x07, 0xFF, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00
  };



static const uint8_t PROGMEM sad_left_eye[] = {
  0x00, 0x00, 0x7f, 0xfe, 0x00, 0x01, 0xff, 0xff, 
  0x00, 0x07, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 
  0x00, 0x7f, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 
  0x07, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const uint8_t PROGMEM sad_right_eye[] = {
  0x7f, 0xfe, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 
  0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xf8, 0x00, 
  0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0x80, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const uint8_t PROGMEM alert_sign[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x0e, 0x70, 0x00, 0x00, 0x1c, 0x38, 0x00, 
    0x00, 0x38, 0x1c, 0x00, 0x00, 0x61, 0x86, 0x00, 0x01, 0xc1, 0x83, 0x80, 0x03, 0x81, 0x81, 0xc0, 
    0x07, 0x01, 0x80, 0xe0, 0x0e, 0x01, 0x80, 0x70, 0x38, 0x00, 0x00, 0x1c, 0x70, 0x01, 0x80, 0x0e, 
    0x60, 0x00, 0x00, 0x06, 0x70, 0x00, 0x00, 0x0e, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00
};

#endif /* BITMAP_HPP */